{
  "scopeName": "source.proto",
  "name": "PROTO (Webots)",
  "fileTypes": ["proto", "wrl", "wbt"],
  "patterns": [
    {
      "match": "#(\\w|\\s|\\W|\\n|\\r\\n)*",
      "name": "comment.line.number-sign"
    },
    {
      "match": "--(\\w|\\s|\\W|\\n|\\r\\n)*",
      "name": "comment.line.number-sign"
    },
    {
      "match": "\\b(deprecatedField|hiddenField|hidden|field|vrmlField|DEF|USE)\\b",
      "name": "storage.modifier"
    },
    {
      "match": "\\b(PROTO)\\b",
      "name": "entity.name.function"
    },
    {
      "match": "\\b(Accelerometer|Appearance|AdvancedMappingAppearance|Background|BallJoint|BallJointParameters|Box|Brake|Camera|Capsule|Charger|Color|Compass|Cone|Connector|ContactProperties|Coordinate|Cylinder|Damping|Device|DifferentialWheels|DirectionalLight|Display|DistanceSensor|ElevationGrid|Emitter|Fluid|Focus|Fog|GPS|Group|Gyro|HingeJoint|HingeJointParameters|Hinge2Joint|ImageTexture|ImmersionProperties|IndexedFaceSet|IndexedLineSet|InertialUnit|Joint|JointParameters|Joystick|Keyboard|LED|Lens|Lidar|Light|LightSensor|LinearMotor|Material|Motor|PBRAppearance|Pen|Physics|Plane|PointLight|PointSet|PositionSensor|Propeller|Radar|RangeFinder|Receiver|Robot|RotationalMotor|Servo|Shape|SliderJoint|Slot|Solid|SolidReference|Speaker|Sphere|SpotLight|Supervisor|TextureCoordinate|TextureTransform|TouchSensor|Track|TrackWheel|Transform|Viewpoint|WorldInfo|Zoom)\\b",
      "name": "entity.name.function"
    },
    {
      "match": "\\b(?:0|[1-9]\\d*)(?:.\\d+)?(?:[eE][+-]?\\d+)?\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(SFBool|MFBool|SFColor|MFColor|SFFloat|MFFloat|SFImage|SFInt32|MFInt32|SFNode|MFNode|SFRotation|MFRotation|SFString|MFString|SFTime|MFTime|SFVec2f|MFVec2f|SFVec3f|MFVec3f|local|IS)\\b",
      "name": "storage.type"
    },
    {
      "match": "\\b(TRUE|FALSE|NULL)\\b",
      "name": "constant.language"
    },
    {
      "match": "\\b(and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b",
      "name": "keyword.control"
    },
    {
      "match": "%{",
      "name": "storage.type"
    },
    {
      "match": "%{=",
      "name": "storage.type"
    },
    {
      "match": "}%",
      "name": "storage.type"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.lua"
        },
        "2": {
          "name": "entity.name.function.scope.lua"
        },
        "3": {
          "name": "entity.name.function.lua"
        },
        "4": {
          "name": "punctuation.definition.parameters.begin.lua"
        },
        "5": {
          "name": "variable.parameter.function.lua"
        },
        "6": {
          "name": "punctuation.definition.parameters.end.lua"
        }
      },
      "match": "\\b(function)(?:\\s+([a-zA-Z_.:]+[.:])?([a-zA-Z_]\\w*)\\s*)?(\\()([^)]*)(\\))",
      "name": "meta.function.lua"
    },
    {
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.lua"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.lua"
        }
      },
      "name": "string.quoted.single.lua",
      "patterns": [
        {
          "include": "punctuation.definition.string.begin.lua"
        },
        {
          "include": "punctuation.definition.string.end.lua"
        },
        {
          "match": "\\\\.",
          "name": "constant.character.escape.lua"
        }
      ]
    },
    {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.lua"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.lua"
        }
      },
      "name": "string.quoted.double.lua",
      "patterns": [
        {
          "include": "punctuation.definition.string.begin.lua"
        },
        {
          "include": "punctuation.definition.string.end.lua"
        },
        {
          "match": "\\\\.",
          "name": "constant.character.escape.lua"
        }
      ]
    },
    {
      "begin": "(?<!--)\\[(=*)\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.lua"
        }
      },
      "end": "\\]\\1\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.lua"
        }
      },
      "name": "string.quoted.other.multiline.lua"
    },
    {
      "match": "\\b(and|or|not|break|do|else|for|if|elseif|return|then|repeat|while|until|end|function|local|in|goto)\\b",
      "name": "keyword.control.lua"
    },
    {
      "match": "\\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\\b",
      "name": "storage.type"
    },
    {
      "match": "\\b(create|resume|running|status|wrap|yield|string|byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|uppe|table|concat|insert|maxn|remove|sor|math|abs|acos|asin|atan2|ceil|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh|sqrt|tanh|io|close|flush|input|lines|open|output|popen|read|tmpfile|type|write|os|clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname|package|cpath|loaded|loadlib|path|preload|seeall|debug|debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|getinfo|setlocal|setmetatable|getregistry|setupvalue|traceback)\\b",
      "name": "storage.type"
    },
    {
      "match": "\\+|-|%|#|\\*|\\/|\\^|==?|~=|<=?|>=?|(?<!\\.)\\.{2}(?!\\.)",
      "name": "keyword.operator.lua"
    }
  ]
}
